from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
from utils.weather import get_weather
from utils.moon import get_moon_phase
from utils.water_level import get_mock_water_level
from utils.weather import analyze_pressure_tendency

previous_pressure = 1013  # default value


def generate_fishing_advice(temp, pressure, wind_speed, cloudiness):
    advice = ""

    if temp < 5:
        advice += "–•–æ–ª–æ–¥–Ω–æ, —Ä—ã–±–∞ –º–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–¥–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–æ–¥–∫–∏ –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –ø—Ä–∏–º–∞–Ω–æ–∫.\n"
    elif 5 <= temp <= 15:
        advice += "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞. –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ª–æ–≤–ª–∏ –æ–∫—É–Ω—è –∏ —â—É–∫–∏. –ü—Ä–∏–º–∞–Ω–∫–∏ ‚Äî –≤–æ–±–ª–µ—Ä—ã ZipBaits, Megabass.\n"
    else:
        advice += "–¢—ë–ø–ª–∞—è –ø–æ–≥–æ–¥–∞. –ê–∫—Ç–∏–≤–Ω—ã –∂–µ—Ä–µ—Ö –∏ —è–∑—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–≤–æ–¥–∫–∏ –∏ —è—Ä–∫–∏–µ –ø—Ä–∏–º–∞–Ω–∫–∏.\n"

    if pressure < 1005:
        advice += "–ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ ‚Äî —Ä—ã–±–∞ –ø–∞—Å—Å–∏–≤–Ω–∞. –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫–∏ —Å —Å–∏–ª—å–Ω–æ–π –≤–∏–±—Ä–∞—Ü–∏–µ–π.\n"
    elif pressure > 1020:
        advice += "–í—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ ‚Äî —Ö–æ—Ä–æ—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —É—Ç—Ä–µ–Ω–Ω–∏–µ —á–∞—Å—ã.\n"

    if wind_speed > 6:
        advice += "–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä. –†—ã–±–∞ —É—Ö–æ–¥–∏—Ç –≤ —É–∫—Ä—ã—Ç–∏—è, —Å—Ç–æ–∏—Ç –ª–æ–≤–∏—Ç—å —É –±–µ—Ä–µ–≥–æ–≤–æ–π —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n"

    if cloudiness > 70:
        advice += "–ü–∞—Å–º—É—Ä–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—ë–º–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏.\n"
    else:
        advice += "–Ø—Å–Ω–æ ‚Äî –ø–æ–¥–æ–π–¥—É—Ç —è—Ä–∫–∏–µ –∏ —Å–≤–µ—Ç–ª—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏.\n"

    return advice


async def fishing(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global previous_pressure

    weather = await get_weather()
    temp = weather["main"]["temp"]
    pressure = weather["main"]["pressure"]
    wind_speed = weather["wind"]["speed"]
    wind_deg = weather["wind"]["deg"]
    cloudiness = weather["clouds"]["all"]

    pressure_tendency = analyze_pressure_tendency(pressure, previous_pressure)
    previous_pressure = pressure

    directions = ["–°", "–°–í", "–í", "–Æ–í", "–Æ", "–Æ–ó", "–ó", "–°–ó"]
    wind_dir_index = round(wind_deg / 45) % 8
    wind_direction = directions[wind_dir_index]

    moon_phase = get_moon_phase()
    water_level = get_mock_water_level()

    advice = generate_fishing_advice(temp, pressure, wind_speed, cloudiness)

    text = (
        f"<b>üå§ –ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ Kintai (—Ä–µ–∫–∞ –ú–∏–Ω—è):</b>\n"
        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f} ¬∞C\n"
        f"–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloudiness}%\n"
        f"–í–µ—Ç–µ—Ä: {wind_speed:.1f} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {wind_direction}\n"
        f"–ê—Ç–º. –¥–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞ ({pressure_tendency})\n"
        f"–§–∞–∑–∞ –ª—É–Ω—ã: {moon_phase}\n"
        f"–£—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã: {water_level}\n\n"
        f"{advice}"
    )

    await update.message.reply_text(text, parse_mode="HTML")



