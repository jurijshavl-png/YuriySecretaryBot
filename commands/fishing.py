import requests
from datetime import datetime
from telegram import Update
from telegram.ext import ContextTypes
from math import cos, sin, radians

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è Kintai (Minija)
LAT = 55.419
LON = 21.271
API_KEY = "YOUR_OPENWEATHER_API_KEY"  # ‚Üê –í–°–¢–ê–í–¨–¢–ï –í–ê–® –ö–õ–Æ–ß

# –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏
previous_pressure = None

async def get_weather():
    url = (
        f"https://api.openweathermap.org/data/2.5/weather?lat={LAT}&lon={LON}"
        f"&appid={API_KEY}&units=metric&lang=ru"
    )
    response = requests.get(url)
    data = response.json()
    return data

def analyze_pressure_tendency(current, previous):
    if previous is None:
        return "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö)"
    elif current > previous:
        return "—Ä–∞—Å—Ç—ë—Ç"
    elif current < previous:
        return "–ø–∞–¥–∞–µ—Ç"
    else:
        return "—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ"

def get_moon_phase():
    day_of_year = datetime.utcnow().timetuple().tm_yday
    synodic_month = 29.53058867
    moon_age = day_of_year % synodic_month

    if moon_age < 1:
        return "–ù–æ–≤–æ–ª—É–Ω–∏–µ üåë"
    elif moon_age < 7.4:
        return "–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞ üåí"
    elif moon_age < 14.8:
        return "–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ üåï"
    elif moon_age < 22.1:
        return "–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞ üåñ"
    else:
        return "–ù–æ–≤–æ–ª—É–Ω–∏–µ üåë"

def get_mock_water_level():
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∏–º–∏—Ç–∞—Ü–∏—é
    return "–£—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã –≤ –ú–∏–Ω–µ–µ: 148 —Å–º (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)"

def generate_fishing_advice(temp, pressure, wind_speed, cloudiness):
    species = []
    lures = []
    techniques = []

    # –ü—Ä–∏–º–µ—Ä—ã –ª–æ–≥–∏–∫–∏
    if 12 <= temp <= 20:
        species.append("–≥–æ–ª–∞–≤–ª—å, —è–∑—å, –∂–µ—Ä–µ—Ö, –æ–∫—É–Ω—å")
        lures.append("–≤–æ–±–ª–µ—Ä—ã 35‚Äì55 –º–º (ZipBaits Rigge, Megabass X-55)")
        techniques.append("–∞–ø—Å—Ç—Ä–∏–º, –ø—Ä–æ–≤–æ–¥–∫–∞ –≤–¥–æ–ª—å —Å—Ç—Ä—É–∏")

    if temp < 10:
        species.append("—Ñ–æ—Ä–µ–ª—å, –æ–∫—É–Ω—å")
        lures.append("—Ç–æ–Ω—É—â–∏–µ –≤–æ–±–ª–µ—Ä—ã, micro crank")
        techniques.append("–º–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞")

    if wind_speed > 8:
        techniques.append("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏")
    if cloudiness > 70:
        techniques.append("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞ (mat tiger, chartreuse)")
    else:
        techniques.append("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ (silver, ghost minnow)")

    advice = (
        f"<b>–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è —Ä—ã–±–∞:</b> {', '.join(set(species)) or '–¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}\n"
        f"<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏:</b> {', '.join(set(lures)) or '—É—Ç–æ—á–Ω–∏—Ç–µ –ø–æ —É—Å–ª–æ–≤–∏—è–º'}\n"
        f"<b>–¢–µ—Ö–Ω–∏–∫–∞ –ª–æ–≤–ª–∏:</b> {', '.join(set(techniques)) or '–ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏'}"
    )
    return advice

async def fishing(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global previous_pressure
    weather = await get_weather()

    temp = weather["main"]["temp"]
    pressure = weather["main"]["pressure"]
    wind_speed = weather["wind"]["speed"]
    wind_deg = weather["wind"]["deg"]
    cloudiness = weather["clouds"]["all"]

    pressure_tendency = analyze_pressure_tendency(pressure, previous_pressure)
    previous_pressure = pressure  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –¥–∞–≤–ª–µ–Ω–∏–µ

    # –ü–µ—Ä–µ–≤–æ–¥ –≤–µ—Ç—Ä–∞ –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    directions = ["–°", "–°–í", "–í", "–Æ–í", "–Æ", "–Æ–ó", "–ó", "–°–ó"]
    wind_dir_index = round(wind_deg / 45) % 8
    wind_direction = directions[wind_dir_index]

    # –õ—É–Ω–∞ –∏ —É—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã
    moon_phase = get_moon_phase()
    water_level = get_mock_water_level()

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä—ã–±–æ–ª–æ–≤–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
    advice = generate_fishing_advice(temp, pressure, wind_speed, cloudiness)

        text = (
        f"<b>üå§ –ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ Kintai (—Ä–µ–∫–∞ –ú–∏–Ω—è):</b>\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f} ¬∞C\n"
        f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloudiness}%\n"
        f"üí® –í–µ—Ç–µ—Ä: {wind_speed:.1f} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {wind_direction}\n"
        f"üìà –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞ ({pressure_tendency})\n"
        f"üåô –§–∞–∑–∞ –ª—É–Ω—ã: {moon_phase}\n"
        f"{water_level}\n\n"
        f"{advice}"
    )

    await update.message.reply_text(text, parse_mode="HTML")
