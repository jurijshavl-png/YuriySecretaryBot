from telegram import Update
from telegram.ext import ContextTypes
from utils.weather import get_weather
from utils.moon import get_moon_phase
from utils.water_level import get_mock_water_level

# –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏
previous_pressure = None

def analyze_pressure_tendency(current, previous):
    if previous is None:
        return "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    elif current > previous:
        return "—Ä–∞—Å—Ç—ë—Ç"
    elif current < previous:
        return "–ø–∞–¥–∞–µ—Ç"
    else:
        return "—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ"

def generate_fishing_advice(temp, pressure, wind_speed, cloudiness):
    species = []
    lures = []
    techniques = []

    if 14 <= temp <= 20:
        species.append("–∂–µ—Ä–µ—Ö")
        lures.append("–≤–æ–±–ª–µ—Ä—ã ZipBaits Khamsin")
        techniques.append("–±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞ —É –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏")

    if 18 <= temp <= 24:
        species.append("—è–∑—å")
        lures.append("Megabass Great Hunting")
        techniques.append("–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞ —É –∫—Ä–æ–º–∫–∏ —Ç—Ä–∞–≤—ã")

    if pressure > 1020:
        techniques.append("–¥–µ–ª–∏–∫–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞ –Ω–∞ –ø–∞—É–∑–∞—Ö")

    if wind_speed < 2:
        lures.append("–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏")

    if cloudiness > 70:
        techniques.append("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞ (mat tiger, chartreuse)")
    else:
        techniques.append("–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ (silver, ghost minnow)")

    advice = (
        f"<b>üéØ –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è —Ä—ã–±–∞:</b> {', '.join(species) or '–¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}\n"
        f"<b>üé£ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏:</b> {', '.join(set(lures)) or '—É—Ç–æ—á–Ω–∏—Ç–µ –ø–æ —É—Å–ª–æ–≤–∏—è–º'}\n"
        f"<b>üß∞ –¢–µ—Ö–Ω–∏–∫–∞ –ª–æ–≤–ª–∏:</b> {', '.join(set(techniques)) or '–ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏'}"
    )
    return advice

async def fishing(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global previous_pressure

    weather = await get_weather()
    temp = weather["main"]["temp"]
    pressure = weather["main"]["pressure"]
    wind_speed = weather["wind"]["speed"]
    wind_deg = weather["wind"]["deg"]
    cloudiness = weather["clouds"]["all"]

    pressure_tendency = analyze_pressure_tendency(pressure, previous_pressure)
    previous_pressure = pressure

    # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ (–≥—Ä–∞–¥—É—Å—ã –≤ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–µ—Ç–∞)
    directions = ["–°", "–°–í", "–í", "–Æ–í", "–Æ", "–Æ–ó", "–ó", "–°–ó"]
    wind_dir_index = round(wind_deg / 45) % 8
    wind_direction = directions[wind_dir_index]

    moon_phase = get_moon_phase()
    water_level = get_mock_water_level()

    advice = generate_fishing_advice(temp, pressure, wind_speed, cloudiness)

    text = (
        f"<b>üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ Kintai (—Ä–µ–∫–∞ –ú–∏–Ω—è):</b>\n"
        f"üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp:.1f} ¬∞C\n"
        f"‚òÅÔ∏è–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloudiness}%\n"
        f"üí®–í–µ—Ç–µ—Ä: {wind_speed:.1f} –º/—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {wind_direction}\n"
        f"üìà–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞ ({pressure_tendency})\n"
        f"üåï–§–∞–∑–∞ –ª—É–Ω—ã: {moon_phase}\n"
        f"üåä–£—Ä–æ–≤–µ–Ω—å –≤–æ–¥—ã: {water_level}\n\n"
        f"{advice}"
    )

    await update.message.reply_text(text, parse_mode="HTML")

fishing_command = fishing
