from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
import datetime

CONSTRUCTION_ITEMS = [
    {
        "item": "–°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –ø–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∞ (–ª–∞–º–µ–ª–∏ + –º–∞—Ç–æ–≤–æ–µ –∑–æ–ª–æ—Ç–æ)",
        "status": "–û–∂–∏–¥–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞",
        "eta": "2025-08-10",
        "store": "Gobana"
    },
    {
        "item": "–ö—É—Ö–æ–Ω–Ω–∞—è –≤–∏—Ç—Ä–∏–Ω–∞ —Å LED",
        "status": "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
        "eta": "2025-07-20",
        "store": "IKEA"
    },
    {
        "item": "–ó–µ—Ä–∫–∞–ª–æ —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π –≤ –≤–∞–Ω–Ω—É—é",
        "status": "–û–∂–∏–¥–∞–µ—Ç—Å—è –¥–æ—Å—Ç–∞–≤–∫–∞",
        "eta": "2025-08-05",
        "store": "Topo Centras"
    }
]

def format_construction():
    today = datetime.date.today()
    lines = []
    for obj in CONSTRUCTION_ITEMS:
        eta_date = datetime.datetime.strptime(obj["eta"], "%Y-%m-%d").date()
        days_left = (eta_date - today).days
        eta_status = f"{days_left} –¥–Ω. –¥–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" if days_left > 0 else "üîß –°—Ä–æ–∫ –ø—Ä–æ—à—ë–ª"
        lines.append(
            f"- *{obj['item']}*\n"
            f"  –°—Ç–∞—Ç—É—Å: _{obj['status']}_\n"
            f"  –°—Ä–æ–∫: `{obj['eta']} ({eta_status})`\n"
            f"  –ú–∞–≥–∞–∑–∏–Ω: {obj['store']}\n"
        )
    return "\n".join(lines)

async def construction_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    reply = (
        "üèóÔ∏è *–°—Ç–∞—Ç—É—Å –ø–æ —Å—Ç—Ä–æ–π–∫–µ:*\n\n"
        f"{format_construction()}\n\n"
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —á–µ—Ä–µ–∑ Google –¢–∞–±–ª–∏—Ü—ã –≤ –±—É–¥—É—â–µ–º."
    )
    await update.message.reply_text(reply, parse_mode="Markdown")

def register_construction_command(application):
    application.add_handler(CommandHandler("—Å—Ç—Ä–æ–π–∫–∞", construction_command))
