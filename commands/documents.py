from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
import datetime

DOCUMENTS = [
    {
        "name": "–ü–∞—Å–ø–æ—Ä—Ç –º–æ—Ä—è–∫–∞",
        "expires": "2026-02-15",
        "file": "üìÑ pasport_moryaka.pdf"
    },
    {
        "name": "ISM Manual",
        "expires": "2025-12-01",
        "file": "üìÑ ism_manual.pdf"
    },
    {
        "name": "–ü—Ä–∏–≤–∏–≤–∫–∏ —Å–æ–±–∞–∫–∏ (Stella)",
        "expires": "2028-04-06",
        "file": "üìÑ vet_passport_stella.pdf"
    },
    {
        "name": "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏ –æ—Ç –±–µ—à–µ–Ω—Å—Ç–≤–∞",
        "expires": "2028-04-06",
        "file": "üìÑ rabies_certificate.pdf"
    }
]

def format_documents():
    today = datetime.date.today()
    lines = []
    for doc in DOCUMENTS:
        exp_date = datetime.datetime.strptime(doc["expires"], "%Y-%m-%d").date()
        days_left = (exp_date - today).days
        status = f"‚úÖ –î–µ–π—Å—Ç–≤—É–µ—Ç ({days_left} –¥–Ω.)" if days_left > 0 else "‚ö†Ô∏è –ò—Å—Ç—ë–∫"
        lines.append(f"- *{doc['name']}* ‚Äî {status}\n  {doc['file']}")
    return "\n\n".join(lines)

async def documents_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    reply = (
        "üìÇ *–í–∞–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:*\n\n"
        f"{format_documents()}\n\n"
        "–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ä–æ–∫–æ–≤ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Google Drive –∏–ª–∏ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É."
    )
    await update.message.reply_text(reply, parse_mode="Markdown")

def register_documents_command(application):
    application.add_handler(CommandHandler("–¥–æ–∫—É–º–µ–Ω—Ç—ã", documents_command))
